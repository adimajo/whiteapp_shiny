name: R Shiny docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: pages
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
      - name: Install dependencies for devtools
        run: |
          sudo apt-get update -y
          sudo apt-get install libgit2-dev libssh2-1-dev libcurl4-openssl-dev pandoc libharfbuzz-dev libfribidi-dev -y
      - name: Install devtools
        run: install.packages("devtools",dependencies=TRUE)
        shell: Rscript {0}
      - name: Check code style
        run: |
          Rscript -e 'install.packages("styler")'
          Rscript inst/pipeline/lint.R
      - name: Install dependencies
        run: devtools::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Install package
        run: |
          Rscript -e "devtools::install()"
          export APPLICATION_TAG_VERSION=`Rscript -e 'library(WhiteAppRShiny); cat(find_packages_versions())'`
          echo "APPLICATION_TAG_VERSION=$APPLICATION_TAG_VERSION" >> $GITHUB_ENV
      - name: Build documentation
        run: Rscript inst/pipeline/document.R
      - name: Upload documentation
        run: |
          export LATEST_COMMITER_EMAIL=`git --no-pager log -1 -s --format="%ae"`
          echo $LATEST_COMMITER_EMAIL
          git config --global user.email "$LATEST_COMMITTER_EMAIL"
          git config --global user.name "$GITHUB_ACTOR"
          git add -f docs
          git commit -am "Rollout version ${{ env.APPLICATION_TAG_VERSION }}"
          git checkout pages
          rm -rf docs
          mkdir docs
          git checkout master -- docs
          git add docs
          if ! git diff-index --quiet HEAD -- ; then git commit -am "Rollout version ${{ env.APPLICATION_TAG_VERSION }}" && git push origin pages; else echo "Nothing to push"; fi
          git checkout master
      - name: Check package (as CRAN)
        run: devtools::check(document = FALSE, args = "--no-tests", error_on = "warning")
        shell: Rscript {0}
      - name: Testthat
        run: devtools::test(quiet = FALSE, clean = FALSE)
        shell: Rscript {0}
      - name: Coverage
        run: print(devtools::test_coverage())
        shell: Rscript {0}
      - name: Check on Mac OS
        env:
          RHUB_TOKEN: ${{ secrets.RHUB_TOKEN }}
        run: Rscript inst/pipeline/rhubcheck.R "macos-highsierra-release-cran" "$RHUB_TOKEN"
      - name: Check on Windows
        env:
          RHUB_TOKEN: ${{ secrets.RHUB_TOKEN }}
        run: Rscript inst/pipeline/rhubcheck.R "windows-x86_64-devel" "$RHUB_TOKEN"
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.APPLICATION_TAG_VERSION }}
